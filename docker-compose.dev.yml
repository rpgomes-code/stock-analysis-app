version: '3.8'

services:
  # NextJS Frontend Development Service
  frontend-dev:
    image: node:18-alpine
    container_name: stock-analysis-frontend-dev
    working_dir: /app
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api:8000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/stock_analysis
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-dev-secret-key-here
    depends_on:
      - api
      - postgres
    networks:
      - stock-analysis-network

  # YFinance API Service
  api:
    build:
      context: ../../Python/stock-finder-api/
      dockerfile: Dockerfile
    container_name: yfinance-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      - redis
    networks:
      - stock-analysis-network

  # Redis for API caching
  redis:
    image: redis:7-alpine
    container_name: stock-analysis-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - stock-analysis-network

  # PostgreSQL Database for User Data
  postgres:
    image: postgres:15-alpine
    container_name: stock-analysis-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stock_analysis
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - stock-analysis-network

networks:
  stock-analysis-network:
    driver: bridge

volumes:
  node_modules:
  redis-data:
  postgres-data: